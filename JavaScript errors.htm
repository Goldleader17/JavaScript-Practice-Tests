<!DOCTYPE html>
<html>

<body>

    <!--The "try" statement defines a code block to run (to try),
        The "catch" statement defines a code block to handle any error,
        The "finally" statement defines a code block to run regardless of the "try / catch" result,
        The "throw" statement defines a custom error.
    -->

<!--try and catch-->

    <h2>JavaScript Error Handling</h2>
    <p>How to use <b>catch</b> to display an error.</p>

    <p id="demo"></p>

    <script>
        try {
            adddlert("Welcome guest!");
        }
        catch(err) {
            document.getElementById("demo").innerHTML = err.message;
        }
        // JavaScript catches adddlert as an error, and executes the catch code to handle it.
    </script>

<!--The throw statement-->

    <!--Input validation example-->
    
    <h2>JavaScript try catch</h2>
    <p>Please input a number between 5 and 10:</p>

    <input id="demo1" type="text">
    <button type="button" onclick="myFunction()">Test input</button>
    <p id="p01"></p>

    <script>
        function myFunction() {
            const message = document.getElementById("p01");
            message.innerHTML = "";
            let x = document.getElementById("demo1").value;
            try {
                if(x.trim() == "") throw "empty";
                if(isNaN(x)) throw "not a number";
                x = Number(x)
                if(x < 5) throw "too low";
                if(x > 10) throw "too high";
            }
            catch(err) {
                message.innerHTML = "Input is " + err;
            }
        }
    </script>

<!--The finally statemment-->

    <h2>JavaScript try catch</h2>
    <p>Please input a number between 5 and 10:</p>

    <input id="demo2" type="text">
    <button type="button" onclick="myFunction()">Test input</button>
    <p id="p02"></p>

    <script>
        function myFunction() {
            const message1 = document.getElementById("p02");
            message1.innerHTML = "";
            let y = document.getElementById("demo2").value;
            try {
                if(y.trim() == "") throw "empty";
                if(isNaN(y)) throw "not a number";
                y = Number(y)
                if(y < 5) throw "too low";
                if(y > 10) throw "too high";
            }
            catch(err) {
                message1.innerHTML = "Input is " + err;
            }
            finally {
                document.getElementById("demo2").value = "";
            }
        }
    </script>

<!--Error Object Properties-->

    <!--Range error-->

    <h2>JavaScript Errors</h2>

    <p>You cannot set the number of significant digits of a number to 500:</p>

    <p id="demo3"></p>

    <script>
        let num = 1;
        try {
            num.toPrecision(500);
        }
        catch(err) {
            document.getElementById("demo3").innerHTML = err.name;
        }
    </script>

    <!--Reference error-->

    <p>You cannot use the value of a non-existing variable:</p>
    <p id="demo4"></p>

    <script>
        let x = 5;
        try {
            x = y + 1;
        }
        catch(err) {
            document.getElementById("demo4").innerHTML = err.name;
        }
    </script>

    <!--Syntax error-->

    <p>You cannot evaluate code that contains a syntax error:</p>
    <p  id="demo5"></p>

    <script>
        try {
            eval("alert('Hello)");
        }
        catch(err) {
            document.getElementById("demo5").innerHTML = err.name;
        }
    </script>

    <!--Type error-->

    <p>You cannot convert a number to upper case:</p>

    <p id="demo6"></p>

    <script>
        let number = 1;
        try {
            number.toUpperCase();
        }
        catch(err) {
            document.getElementById("demo6").innerHTML = err.name;
        }
    </script>

    <!--URI (Uniform Resource Identifier) error-->

    <p>Some characters cannot be decoded with decodeURI():</p>
    <p id="demo7"></p>

    <script>
        try {
            decodeURI("%%%");
        }
        catch(err) {
            document.getElementById("demo7").innerHTML = err.name;
        }
    </script>

</body>
</html>